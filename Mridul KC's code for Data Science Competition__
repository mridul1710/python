{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c581d8db",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Code to do a multivariate regression \n",
    "import pandas as pd\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.impute import SimpleImputer\n",
    "\n",
    "# Load training and testing data\n",
    "train_data = pd.read_excel(r'D:\\Studies\\Data Science Comp\\training data.xlsx') #local path assigned to training and testing data\n",
    "test_data = pd.read_excel(r'D:\\Studies\\Data Science Comp\\testing data.xlsx')\n",
    "\n",
    "# Handle missing values in the specified columns\n",
    "train_data['7.a.1 - International financial flows to developing countries in support of clean energy R&D and renewable energy production (millions of constant 2020 United States dollars)'] = train_data['7.a.1 - International financial flows to developing countries in support of clean energy R&D and renewable energy production (millions of constant 2020 United States dollars)'].fillna(train_data['9.5.1 - Research and development expenditure (% of GDP)'])\n",
    "train_data['9.5.1 - Research and development expenditure (% of GDP)'] = train_data['9.5.1 - Research and development expenditure (% of GDP)'].fillna(train_data['7.a.1 - International financial flows to developing countries in support of clean energy R&D and renewable energy production (millions of constant 2020 United States dollars)'])\n",
    "\n",
    "train_data = train_data.dropna(subset=['7.a.1 - International financial flows to developing countries in support of clean energy R&D and renewable energy production (millions of constant 2020 United States dollars)', '9.5.1 - Research and development expenditure (% of GDP)'], how='all')\n",
    "\n",
    "# Drop non-numeric columns from both training and testing data\n",
    "train_data = train_data.drop(columns=['Country', 'Code'])\n",
    "test_data = test_data.drop(columns=['Country', 'Code'])\n",
    "\n",
    "# Prepare features and target for training\n",
    "X_train = train_data.drop(columns=['Assigned Score'])\n",
    "y_train = train_data['Assigned Score']\n",
    "\n",
    "# Prepare features for testing (without the target variable)\n",
    "X_test = test_data\n",
    "\n",
    "# Handle missing values in the training and testing data\n",
    "imputer = SimpleImputer(strategy='mean')  \n",
    "X_train_imputed = imputer.fit_transform(X_train)\n",
    "X_test_imputed = imputer.transform(X_test)\n",
    "\n",
    "# Training model\n",
    "model = LinearRegression()\n",
    "model.fit(X_train_imputed, y_train)\n",
    "\n",
    "# Predict Assigned Score for the testing dataset\n",
    "test_data['Assigned Score'] = model.predict(X_test_imputed)\n",
    "\n",
    "#save the results to a new file\n",
    "test_data.to_csv('predicted_data.csv', index=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "99919451",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Code to generate scatter plots\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "df = pd.read_csv(\"D:\\Studies\\Data Science Comp\\predicted_data.csv\")\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.ylim(0,0.9)\n",
    "plt.scatter(df[\"7.2.1 - Renewable energy share in the total final energy consumption (%)\"], df[\"Assigned Score\"], alpha=0.5)\n",
    "plt.title(\"Scatterplot of REI vs Renewable Energy Share\")\n",
    "plt.xlabel(\"Renewable Energy Share (%)\")\n",
    "plt.ylabel(\"Renewable Energy Adoption Index (RIA)\")\n",
    "plt.grid(True)\n",
    "plt.show()\n",
    "\n",
    "\n",
    "\n",
    "# Scatter plot\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.ylim(0,0.9)\n",
    "plt.scatter(df[\"9.4.1 - Annual CO₂ emissions per GDP (kg per international-$)\"], df[\"Assigned Score\"], alpha=0.5)\n",
    "plt.title(\"Scatterplot of REI vs CO₂ Emissions per GDP\")\n",
    "plt.xlabel(\"Annual CO₂ Emissions per GDP (kg per international-$)\")\n",
    "plt.ylabel(\"Renewable Energy Adoption Index (RIA)\")\n",
    "plt.grid(True)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "01e46d0a",
   "metadata": {},
   "outputs": [
    {
     "ename": "LinAlgError",
     "evalue": "SVD did not converge in Linear Least Squares",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mLinAlgError\u001b[0m                               Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_7880/3085490989.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m     15\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     16\u001b[0m \u001b[1;31m# Fit a linear trendline\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 17\u001b[1;33m \u001b[0mcoefficients\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mpolyfit\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mx\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0my\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;36m1\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     18\u001b[0m \u001b[0mpolynomial\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mpoly1d\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mcoefficients\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     19\u001b[0m \u001b[0mtrendline_x\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mlinspace\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmin\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mx\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mmax\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mx\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;36m100\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\numpy\\core\\overrides.py\u001b[0m in \u001b[0;36mpolyfit\u001b[1;34m(*args, **kwargs)\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\numpy\\lib\\polynomial.py\u001b[0m in \u001b[0;36mpolyfit\u001b[1;34m(x, y, deg, rcond, full, w, cov)\u001b[0m\n\u001b[0;32m    666\u001b[0m     \u001b[0mscale\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mNX\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msqrt\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mlhs\u001b[0m\u001b[1;33m*\u001b[0m\u001b[0mlhs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msum\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    667\u001b[0m     \u001b[0mlhs\u001b[0m \u001b[1;33m/=\u001b[0m \u001b[0mscale\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 668\u001b[1;33m     \u001b[0mc\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mresids\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mrank\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0ms\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mlstsq\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mlhs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mrhs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mrcond\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    669\u001b[0m     \u001b[0mc\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m(\u001b[0m\u001b[0mc\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mT\u001b[0m\u001b[1;33m/\u001b[0m\u001b[0mscale\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mT\u001b[0m  \u001b[1;31m# broadcast scale coefficients\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    670\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\numpy\\core\\overrides.py\u001b[0m in \u001b[0;36mlstsq\u001b[1;34m(*args, **kwargs)\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\numpy\\linalg\\linalg.py\u001b[0m in \u001b[0;36mlstsq\u001b[1;34m(a, b, rcond)\u001b[0m\n\u001b[0;32m   2290\u001b[0m         \u001b[1;31m# lapack can't handle n_rhs = 0 - so allocate the array one larger in that axis\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2291\u001b[0m         \u001b[0mb\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mzeros\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mb\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m-\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m+\u001b[0m \u001b[1;33m(\u001b[0m\u001b[0mm\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mn_rhs\u001b[0m \u001b[1;33m+\u001b[0m \u001b[1;36m1\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mb\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2292\u001b[1;33m     \u001b[0mx\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mresids\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mrank\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0ms\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mgufunc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0ma\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mb\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mrcond\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0msignature\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0msignature\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mextobj\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mextobj\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2293\u001b[0m     \u001b[1;32mif\u001b[0m \u001b[0mm\u001b[0m \u001b[1;33m==\u001b[0m \u001b[1;36m0\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2294\u001b[0m         \u001b[0mx\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;33m...\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;36m0\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\numpy\\linalg\\linalg.py\u001b[0m in \u001b[0;36m_raise_linalgerror_lstsq\u001b[1;34m(err, flag)\u001b[0m\n\u001b[0;32m     98\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     99\u001b[0m \u001b[1;32mdef\u001b[0m \u001b[0m_raise_linalgerror_lstsq\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0merr\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mflag\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 100\u001b[1;33m     \u001b[1;32mraise\u001b[0m \u001b[0mLinAlgError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m\"SVD did not converge in Linear Least Squares\"\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    101\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    102\u001b[0m \u001b[1;32mdef\u001b[0m \u001b[0m_raise_linalgerror_qr\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0merr\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mflag\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mLinAlgError\u001b[0m: SVD did not converge in Linear Least Squares"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "90227427",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "11e5e474",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7aa38d77",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "73d98355",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3d4bf8b3",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
